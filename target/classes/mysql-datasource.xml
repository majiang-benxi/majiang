<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd">

   <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="120" />
		<property name="idleMaxAgeInMinutes" value="60" />
		<property name="connectionTestStatement" value="select now()" />
		<property name="maxConnectionsPerPartition" value="5" />
		<property name="minConnectionsPerPartition" value="1" />
		<property name="poolAvailabilityThreshold" value="10"/>
		<property name="partitionCount" value="2" />
		<property name="acquireIncrement" value="2" />
		<property name="statementsCacheSize" value="100" />
		<!-- <property name="releaseHelperThreads" value="0" /> -->
		<property name="connectionTimeoutInMs" value="10000" />
	</bean>

    <!-- jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 集成myBaits框架,配置sqlSessionFatory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置扫描Mapper XML的位置 -->
        <property name="mapperLocations" value="classpath*:xmlMapper/*.xml"/>
        <!-- 配置mybatis配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis-config-new.xml"/>
    </bean>

    <!-- 配置sqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

   <!--  <bean id="batchSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean> -->

    <!-- 数据库的事务管理器配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--<mybatis使用升级>-->
    <!-- 配置扫描Mapper接口的包路径 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.mahjong.server.mapper"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="accept*" propagation="REQUIRED"/>
            <tx:method name="reject*" propagation="REQUIRED"/>
            <tx:method name="execute*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="recover*" propagation="REQUIRED"/>
            <!--<tx:method name="sync*" propagation="REQUIRED"/>-->
            <tx:method name="batch*" propagation="REQUIRED"/>
            <tx:method name="complete*" propagation="REQUIRED"/>
            <tx:method name="exchange*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置哪些类的方法需要进行事务管理 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="servicePointcut" expression="execution(* com.mahjong.server.mapper.service..*.*(..))"/>
        <aop:advisor pointcut-ref="servicePointcut" advice-ref="txAdvice"/>
    </aop:config>

</beans>
