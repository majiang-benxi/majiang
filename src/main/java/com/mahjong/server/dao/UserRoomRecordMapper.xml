<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mahjong.server.dao.UserRoomRecordMapper" >
  <resultMap id="BaseResultMap" type="com.mahjong.server.entity.UserRoomRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="room_record_id" property="roomRecordId" jdbcType="INTEGER" />
    <result column="room_num" property="roomNum" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_direction" property="userDirection" jdbcType="TINYINT" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="last_score" property="lastScore" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room_record_id, room_num, user_id, user_direction, join_time, last_score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mahjong.server.entity.UserRoomRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_room_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_room_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCdt" resultMap="BaseResultMap" parameterType="com.mahjong.server.entity.UserRoomRecord" >
    select 
    <include refid="Base_Column_List" />
    from user_room_record
    <where >
      <if test="roomRecordId != null" >
        and room_record_id = #{roomRecordId,jdbcType=INTEGER}
      </if>
      <if test="roomNum != null" >
        and room_num = #{roomNum,jdbcType=INTEGER}
      </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userDirection != null" >
        and user_direction = #{userDirection,jdbcType=TINYINT}
      </if>
      <if test="joinTime != null" >
        and join_time = #{joinTime,jdbcType=TIMESTAMP}
      </if>
      <if test="lastScore != null" >
        and last_score = #{lastScore,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_room_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mahjong.server.entity.UserRoomRecordExample" >
    delete from user_room_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mahjong.server.entity.UserRoomRecord" >
    insert into user_room_record (id, room_record_id, room_num, 
      user_id, user_direction, join_time, 
      last_score)
    values (#{id,jdbcType=INTEGER}, #{roomRecordId,jdbcType=INTEGER}, #{roomNum,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{userDirection,jdbcType=TINYINT}, #{joinTime,jdbcType=TIMESTAMP}, 
      #{lastScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mahjong.server.entity.UserRoomRecord" >
    insert into user_room_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roomRecordId != null" >
        room_record_id,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userDirection != null" >
        user_direction,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
      <if test="lastScore != null" >
        last_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomRecordId != null" >
        #{roomRecordId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userDirection != null" >
        #{userDirection,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastScore != null" >
        #{lastScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mahjong.server.entity.UserRoomRecordExample" resultType="java.lang.Integer" >
    select count(*) from user_room_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_room_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roomRecordId != null" >
        room_record_id = #{record.roomRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.roomNum != null" >
        room_num = #{record.roomNum,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userDirection != null" >
        user_direction = #{record.userDirection,jdbcType=TINYINT},
      </if>
      <if test="record.joinTime != null" >
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastScore != null" >
        last_score = #{record.lastScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_room_record
    set id = #{record.id,jdbcType=INTEGER},
      room_record_id = #{record.roomRecordId,jdbcType=INTEGER},
      room_num = #{record.roomNum,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_direction = #{record.userDirection,jdbcType=TINYINT},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      last_score = #{record.lastScore,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mahjong.server.entity.UserRoomRecord" >
    update user_room_record
    <set >
      <if test="roomRecordId != null" >
        room_record_id = #{roomRecordId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userDirection != null" >
        user_direction = #{userDirection,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastScore != null" >
        last_score = #{lastScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mahjong.server.entity.UserRoomRecord" >
    update user_room_record
    set room_record_id = #{roomRecordId,jdbcType=INTEGER},
      room_num = #{roomNum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_direction = #{userDirection,jdbcType=TINYINT},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      last_score = #{lastScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>